1.  Choosing coorrect database will effect our non functional requirements.

2.  For Caching releated things, We can use Redis.

3.  For image, video or files upload, We should use some blob storage like S3.

4.  With S3, We should try to use CDN like AWS Cloudfront for better performance.

5.  For text searching capabilities, We should use elastic search or solr.

6.  Fuzzy search should be enabled, ( Airport ==> Airprot )  EDIT DISTANCE -> 2.

7.  Elastice Search and Solr are not a database, They are search engines.

8.  We should not keep our data as primary source of truth in elastic search and solr.

9.  If we want to build some metrics kind of application, like grafana or prometheus. We should use time series databases.

10. Time series databases --> influxdb, openTSDB etc.

11. If there is usecase of dumping very large data in database and perform some analytic thing and generate a report baseed on that. hadoop will be the best choice.


================================================================================================================================================================================================================================================================


Secenario Where We will use Relational databases.


1. Structured Data  ====>

   If data is structure and or can be formed in structure easily, Relational databases make more sense.

2. If We decided that our data is structured, Now we can think if We need ACID property or not. (Transactions)

3.  If We need Transactions, Then we can use Relational database like MySQL, Postgres, Oracle.



================================================================================================================================================================================================================================================================


Secenario Where We will use Non Relational databases.

1.  If the use case is --> You have lots of data attributes and different types of complex queries can be asked.

2.  if Point 1, Then We should use something called document DB like ( mongodb, couch base ).

3.  Elastice search or solr databases are also exmaples of document DB.

4.  If we want to perform some analytic operations on some columns.

OR

5.  If we have ever increasing data, We can use ( cassandra or HBase ).

6.  Cassandra is not very heave to deploy

7. Difference between Columnar and Relational Databases.

   1. While a relational database is optimized for storing rows of data, typically for transactional applications.
   
   2. A columnar database is optimized for fast retrieval of columns of data, typically in analytical applications.

   3. Column-oriented databases (aka columnar databases) are more suitable for analytical workloads because the data format (column format) lends itself to faster query processing â€” scans, aggregation, etc.


8. For eg., different events occur in the interaction of users with the food ordering apps
   1. They search for a dish (search event)
   2. They select a restaurant and view menu (view event)
   3. They may add a dish to the cart (add_to_cart event)
   4. They may place an order (order event)
   5. They may abandon cart (abondon_cart event)